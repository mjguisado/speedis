{
    "id": "mocks",
    "prefix": "/mocks",
    "logLevel": "info",
    "exposeErrors": false,
    "redisTimeout": 250,
    "redisBreaker": true,
    "redisBreakerOptions": {
        "errorThresholdPercentage": 25,
        "resetTimeout": 5000
    },
    "redis": {
        "url": "redis://redis:6379"
    },
    "origin": {
        "httpxOptions": {
            "host": "mocks",
            "port": 3030,
            "timeout": 2000
        },
        "agentOptions": {
            "keepAlive": true
        },
        "ignoredQueryParams": ["cc", "delay"],
        "sortQueryParams": true,
        "localRequestsCoalescing": true,
        "distributedRequestsCoalescing": false,
        "distributedRequestsCoalescingOptions": {
            "lockTTL": 750,
            "retryCount": 3,
            "retryDelay": 500,
            "retryJitter": 250
        },
        "originBreaker": false,
        "originBreakerOptions": {
            "errorThresholdPercentage": 25,
            "resetTimeout": 20000
        },
        "actionsLibraries": {
            "json": "./actionLibraries/json.js"
        },
        "transformations": [
            {
                "urlPattern": "/mocks/users/1",
                "actions": [
                    {
                        "phase": "OriginResponse",
                        "uses":  "json:deleteJsonPaths",
                        "with": {
                            "jsonpaths": ["$[*].user.phones[*].type", "$[*].metadata"]
                        }         
                    }
                ]  
            },
            {
                "urlPattern": "/mocks/users/2",
                "actions": [
                    {
                        "phase": "OriginResponse",
                        "uses":  "json:keepJsonPaths",
                        "with": {
                            "jsonpaths": ["$[*].user.phones[*].type", "$[*].metadata"]
                        }    
                    }
                ]  
            },
            {
                "urlPattern": ".*",
                "actions": [
                    {
                        "phase": "OriginRequest",
                        "uses":  "headers:setHeaders",
                        "with": {
                            "x-header": "example of transformation"
                        }         
                    }
                ]  
            } 
        ]
    }
}