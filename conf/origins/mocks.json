{
    "id": "mocks",
    "prefix": "/mocks",
    "logLevel": "warn",
    "exposeErrors": true,
    "origin": {
        "http2Options": {
            "authority": "https://mocks2:3030",
            "options": {
                "rejectUnauthorized": false,
                "timeout": 2000
            }
        },
        "originTimeout": 1000,
        "originBreaker": true,
        "originBreakerOptions": {
            "errorThresholdPercentage": 25,
            "resetTimeout": 2000
        }
    },
    "bff": {
        "transformations": [
            {
                "urlPattern": "/mocks/users/1",
                "actions": [
                    {
                        "phase": "OriginResponse",
                        "uses": "json:deleteJsonPaths",
                        "with": {
                            "jsonpaths": [
                                "$[*].user.phones[*].type",
                                "$[*].metadata"
                            ]
                        }
                    }
                ]
            },
            {
                "urlPattern": "/mocks/users/2",
                "actions": [
                    {
                        "phase": "VariantsTracker",
                        "uses": "json:keepJsonPaths",
                        "with": {
                            "jsonpaths": [
                                "$[*].user.phones[*].type",
                                "$[*].metadata"
                            ]
                        }
                    }
                ]
            }
        ]
    },
    "variantsTracker": {
        "urlPatterns": [
            "/mocks/users/*"
        ]
    },
    "cache": {
        "cacheables": [
            {
                "urlPattern": "/mocks/items/public-.*"
            },
            {
                "urlPattern": "/mocks/items/.*",
                "perUser": true
            }
        ],
        "ignoredQueryParams": [
            "cc",
            "delay"
        ],
        "localRequestsCoalescing": true,
        "distributedRequestsCoalescing": true,
        "distributedRequestsCoalescingOptions": {
            "lockTTL": 750,
            "retryCount": 3,
            "retryDelay": 500,
            "retryJitter": 250
        }
    },
    "oauth2": {
        "id": "mocks.oauth2",
        "logLevel": "warn",
        "baseUrl": "https://mocks",
        "clientId": "speedis-client",
        "clientSecret": "IHSkjNc9xydCI0cc632mV9WhOuQBOD2u",
        "discoverySupported": true,
        "authorizationServerMetadataLocation": "https://keycloak:8443/realms/speedis/.well-known/oauth-authorization-server",
        "authorizationServerMetadata": {
            "issuer": "https://keycloak:8443/realms/speedis",
            "authorization_endpoint": "https://keycloak:8443/realms/speedis/protocol/openid-connect/auth",
            "token_endpoint": "https://keycloak:8443/realms/speedis/protocol/openid-connect/token",
            "jwks_uri": "https://keycloak:8443/realms/speedis/protocol/openid-connect/certs"
        },
        "authorizationRequest": {
            "redirect_uri": "https://mocks/oauth2/callback",
            "scope": "openid profile email"
        },
        "pkceEnabled": true,
        "postAuthRedirectUri": "https://mocks/mocks/items/RealBetis?delay=300&cc=public,max-age=10&a=alfa&b=beta&c=",
        "logoutRequest": {
            "post_logout_redirect_uri": "https://mocks/mocks/users/1"
        }
    },    
    "redis": {
        "redisOptions": {
            "url": "redis://redis:6379"
        },
        "redisTimeout": 500,
        "redisBreaker": true,
        "redisBreakerOptions": {
            "errorThresholdPercentage": 25,
            "resetTimeout": 5000
        },
        "disableOriginOnRedisOutage": true
    }
}