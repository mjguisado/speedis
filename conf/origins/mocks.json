{
    "id": "mocks",
    "prefix": "/mocks",
    "redis": {
        "redisOptions": {
            "url": "redis://redis:6379"
        },
        "redisTimeout": 500,
        "redisBreaker": true,
        "redisBreakerOptions": {
            "errorThresholdPercentage": 25,
            "resetTimeout": 5000
        },
        "disableOriginOnRedisOutage": true
    },
    "origin": {
        "httpxOptions": {
            "host": "mocks",
            "port": 3030,
            "timeout": 2000
        },
        "agentOptions": {
            "keepAlive": true
        },
        "ignoredQueryParams": [
            "cc",
            "delay"
        ],
        "sortQueryParams": true,
        "localRequestsCoalescing": true,
        "distributedRequestsCoalescing": true,
        "distributedRequestsCoalescingOptions": {
            "lockTTL": 750,
            "retryCount": 3,
            "retryDelay": 500,
            "retryJitter": 250
        },
        "originTimeout": 2000,
        "originBreaker": true,
        "originBreakerOptions": {
            "errorThresholdPercentage": 25,
            "resetTimeout": 15000
        },
        "actionsLibraries": {
            "json": "./actionLibraries/json.js"
        },
        "transformations": [
            {
                "urlPattern": "/mocks/users/1",
                "actions": [
                    {
                        "phase": "OriginResponse",
                        "uses": "json:deleteJsonPaths",
                        "with": {
                            "jsonpaths": [
                                "$[*].user.phones[*].type",
                                "$[*].metadata"
                            ]
                        }
                    }
                ]
            },
            {
                "urlPattern": "/mocks/users/2",
                "actions": [
                    {
                        "phase": "OriginResponse",
                        "uses": "json:keepJsonPaths",
                        "with": {
                            "jsonpaths": [
                                "$[*].user.phones[*].type",
                                "$[*].metadata"
                            ]
                        }
                    }
                ]
            },
            {
                "urlPattern": ".*",
                "actions": [
                    {
                        "phase": "OriginRequest",
                        "uses": "headers:setHeaders",
                        "with": {
                            "x-header": "example of transformation"
                        }
                    }
                ]
            }
        ],
        "accessControl": [
            {
                "urlPattern": "/users/1/",
                "requiredScopes": ["profile", "email"]
            },
            {
                "urlPattern": ".*/signature",
                "requiredScopes": ["profile"]
            }
        ]  
    },
    "oauth2" :{
        "id": "mocks.oauth2",
        "baseUrl": "https://mocks",
        "clientId": "confiable",
        "clientSecret":"7ljC9gakySlryzjklgfxEVwjabnjTWpu",
        "discoverySupported": true,
        "authorizationServerMetadataLocation":"https://keycloak:8443/realms/speedis/.well-known/oauth-authorization-server",
        "authorizationServerMetadata": {
            "issuer":"https://keycloak:8443/realms/speedis",
            "authorization_endpoint":"https://keycloak:8443/realms/speedis/protocol/openid-connect/auth",
            "token_endpoint":"https://keycloak:8443/realms/speedis/protocol/openid-connect/token",
            "jwks_uri": "https://keycloak:8443/realms/speedis/protocol/openid-connect/certs"
        },
        "authorizationRequest": {},
        "pkceEnabled": true,
        "postAuthRedirectUrl": "https://mocks/mocks/items/RealBetis?delay=300&cc=public,max-age=10&a=alfa&b=beta&c=",
        "redis": {
            "redisOptions": {
                "url": "redis://redis:6379"
            },
            "redisTimeout": 500,
            "redisBreaker": true,
            "redisBreakerOptions": {
                "errorThresholdPercentage": 25,
                "resetTimeout": 5000
            },
            "disableOriginOnRedisOutage": true
        }
    }
}